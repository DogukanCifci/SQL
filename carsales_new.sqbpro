<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/dogukan/Desktop/CLARUSWAY/DERSLER/SQL/carsales.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure pragmas browser query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1518"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainbrands"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="brands" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="19"/><column index="2" value="73"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="cars" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="25"/><column index="2" value="52"/><column index="3" value="54"/><column index="4" value="45"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="employees" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="19"/><column index="2" value="55"/><column index="3" value="73"/><column index="4" value="128"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="markalar" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="sales" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="25"/><column index="2" value="37"/><column index="3" value="74"/><column index="4" value="67"/><column index="5" value="73"/></column_widths><filter_values><column index="3" value="6"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="sqlite_sequence" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="69"/><column index="2" value="29"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Yeni kayit Ekleme- Kayit silme- Kayit üzerinde degisiklik yapma">/* ------------------------------------------------------------------YENI KAYIT EKLEME --------------------------------------------------*/
INSERT INTO brands (id, brandname) VALUES(&quot;5&quot;,&quot;Ferrari&quot;) ;


/* ------------------------------------------------------------------KAYIT ÜZERINDE DEGISIKLIK YAPMA--------------------------------------------------*/

 /*  UPDATE brands SET brandname = &quot;Porsche&quot;  ---------&gt; Bu sekilde yaparsam bütün brandnameler porsche olur. Sart belirtmem lazim. */

UPDATE brands SET brandname = &quot;Porsche&quot; WHERE brandname = &quot;Ferrari&quot; ;


/* ------------------------------------------------------------------HERHANGI BIR SÜTUNA GÖRE KAYIT SILME --------------------------------------------------*/

DELETE FROM brands WHERE brandname = &quot;Porsche&quot; ;	/*Ismi porsche olan tüm kayitlari siler*/

DELETE FROM brands WHERE id = &quot;6&quot; ;				/*Bu sekilde sadece idsi 6 olan kaydi siler */




</sql><sql name="index-view olusturma">CREATE INDEX fiyata_gore ON cars(price) ;

CREATE VIEW markalar AS SELECT brandname FROM brands ; /*AS den sonra normal SELECT li sorgu yazilir. */



</sql><sql name="TRIGGER ISLEMI ">CREATE TRIGGER first_trigger AFTER INSERT ON  sales 			/*Trigger a isim verdim. SALES Tablosunda insert  isleminden sonra first_triggeri calistir. */
BEGIN 
UPDATE employees SET  salary = salary + 50 ;
END ;
/*Test ettik yeni bir satis ekleyip calisti. */

/* 1.ADIM : Triggera bir isim verilip tirggeri olsutrduk. 
	2.ADIM : Hangi durumdan önce veya trigger calisacak onu yaziyoruz. (AFTER INSERT ON.. )
	3.ADIM : BEGIN VE END ACIYORUZ.
	4.BEGIN VE END ARASINDA TRIGGER DEVREYE GIRDIKTEN SONRA NE OLMASINI ISTYORSAK ONUN KOMUTUNU YAZARIZ. 
	5.UPDATE KISMINI ; ILE BITIR.
	6.END KISMINI ; ILE BITIR
	*/</sql><sql name="transaction islemi">--EGER SORGU CALISIRSA COMMIT- CALISMAZSA ROLL BACK 

--MANTIGI EGER ISLEM SIRASINDA BÜTÜN KODLAR DOGRU CALISIYORSA COMMIT DERSIN VE HEPSI CALISIR.

--AMA EGER ISLEM SIRASINDA BIR TANE BILE HATA VARSA O HATAYA GELENE KADAR CALISAN KODLARI DA GERI AL VE EN BASA DÖN ROLL BACK 


........
IF .....
		commit 
	ELSE
	ROLLBACK</sql><sql name="SORU-CÖZÜM">--hangi markadan kac model var ? 
SELECT brands.brandname, COUNT(models.modelname) FROM brands INNER JOIN models on models.idbrand = brands.id GROUP BY brands.brandname ;

-- Hangi markanin elimizde kac adet modeli var 
SELECT DISTINCT brands.brandname, COUNT(cars.idmodel) FROM brands INNER JOIN cars ON brands.id = cars.idbrand  Group By cars.idbrand; 

--ise giris tarihi girilmemis personelin listesi 
SELECT * FROM employees WHERE hiredate is  NULL ;

--Ise giris tarihi olmayan personelin giris tarihlerini 202-3-1 olarak güncelleyiniz.

UPDATE employees SET hiredate =&quot;2022-03-01&quot; WHERE hiredate is Null ;

-- Tüm personele %10 zam 

UPDATE employees SET salary = salary + salary * 0.1 ;
-- ortalama ücretten az alan kisilerin maaslarini ortalam ücretlerine esitle --!!!!!!!!!ÖNEMLI IC ICE !!!!!!!!!!
UPDATE employees SET salary = (SELECT AVG(salary) FROM employees) WHERE salary &lt; 
																									(SELECT AVG(salary) FROM employees) ;

--hangi personel kac adet satis yapti 

SELECT sales.idemployee, employees.name, COUNT(*) AS aracsatis FROM sales INNER JOIN  employees on employees.id=sales.idemployee GROUP BY SALES.idemployee ; 

--Hic satis yapmamis personeli bul 
SELECT id, name FROM employees WHERE id NOT IN 
																								(SELECT idemployee FROM sales) 
																								
--1den fazla satis yapanlari göster
SELECT sales.idemployee, employees.name, COUNT(*) AS kisisatis FROM sales INNER JOIN employees oN employees.id=sales.idemployee GROUP BY sales.idemployee HAVING kisisatis &gt; 1 ;
																								
--Elde kalan araclarin listesi 

SELECT * FROM cars WHERE id NOT IN 
																				(SELECT idcar FROM sales) ;
																				
SELECT * FROM cars LEFT JOIN sales ON sales.idcar=cars.id WHERE idcar is NULL ;	-- BU SORGU DA AYNI CIKTIYI VERIR

--HER BIR ARAC ICIN ALIS, SATIS FIYATI KAR VEYA ZARARINI GÖSTER
SELECT cars.id, cars.idbrand, cars.price AS alisfiyati, sales.salesprice AS satisfiyati, (cars.price - sales.salesprice) AS karzarar FROM cars INNER JOIN sales ON cars.id = sales.idcar ; --OTOMATIK SÜTUN EKLENDI KARZARAR OLARAK

																		
</sql><sql name="HAVING KULANIMI">--1den fazla satis yapanlari göster
SELECT sales.idemployee, employees.name, COUNT(*) AS kisisatis FROM sales INNER JOIN employees oN employees.id=sales.idemployee 
																																																					GROUP BY sales.idemployee HAVING kisisatis &gt; 1 ;
																																																					
-- GRUPLAR ÜZERINDE ELEME YAPARKEN HAVING KULLANILIR--</sql><current_tab id="5"/></tab_sql></sqlb_project>
